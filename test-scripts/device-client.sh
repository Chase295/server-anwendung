#!/bin/bash

# IoT Orchestrator Device Client Launcher
# =======================================
# Startet das Python-Script f√ºr ein Device mit Mikrofon und Lautsprecher

echo "üì± IoT Orchestrator Device Client"
echo "=================================="
echo ""
echo "Dieses Script startet ein Device mit:"
echo "  ‚Ä¢ Mikrofon (sendet Audio bei Enter-Taste)"
echo "  ‚Ä¢ Lautsprecher (empf√§ngt Audio automatisch)"
echo ""

# Pr√ºfe ob Python verf√ºgbar ist
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 ist nicht verf√ºgbar!"
    echo "   Installiere Python 3 und versuche es erneut."
    exit 1
fi

# Pr√ºfe ob das Python-Script existiert
SCRIPT_PATH="$(dirname "$0")/device-client.py"
if [ ! -f "$SCRIPT_PATH" ]; then
    echo "‚ùå Python-Script nicht gefunden: $SCRIPT_PATH"
    echo "   Stelle sicher, dass du im richtigen Verzeichnis bist."
    exit 1
fi

echo "üìã Voraussetzungen:"
echo "   ‚Ä¢ PyAudio: pip install pyaudio"
echo "   ‚Ä¢ WebSocket-Client: pip install websockets"
echo "   ‚Ä¢ ffmpeg (f√ºr Audio-Wiedergabe)"
echo "   ‚Ä¢ Aktiver WebSocket-Server auf Port 8080"
echo ""

# Pr√ºfe ob erforderliche Pakete installiert sind
echo "üîç Pr√ºfe Abh√§ngigkeiten..."

python3 -c "import pyaudio" 2>/dev/null
if [ $? -ne 0 ]; then
    echo "‚ö†Ô∏è  PyAudio ist nicht installiert!"
    echo "   Installiere mit einem der folgenden Befehle:"
    echo "   ‚Ä¢ pip install pyaudio"
    echo "   ‚Ä¢ Auf macOS: brew install portaudio && pip install pyaudio"
    echo ""
    read -p "Fortfahren trotzdem? (j/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Jj]$ ]]; then
        exit 1
    fi
fi

python3 -c "import websockets" 2>/dev/null
if [ $? -ne 0 ]; then
    echo "‚ö†Ô∏è  websockets ist nicht installiert!"
    echo "   Installiere mit: pip install websockets"
    echo ""
    read -p "Fortfahren trotzdem? (j/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Jj]$ ]]; then
        exit 1
    fi
fi

echo ""
echo "üöÄ Starte Device-Client..."
echo "   Gateway: ws://localhost:8080/ws/external"
echo "   Format: 16kHz, Mono, 16-bit PCM"
echo ""
echo "üí° Bedienung:"
echo "   ‚Ä¢ Enter-Taste: Mikrofon-Audio senden"
echo "   ‚Ä¢ Enter erneut: Aufnahme stoppen"
echo "   ‚Ä¢ q + Enter: Programm beenden"
echo "   ‚Ä¢ Lautsprecher: Empf√§ngt automatisch Audio"
echo ""
echo "‚ö†Ô∏è  WICHTIG:"
echo "   ‚Ä¢ Device wird als 'python-voice-device' in Mic- und Speaker-Nodes sichtbar"
echo "   ‚Ä¢ Stelle sicher, dass client_secret_python-voice-device in der DB gespeichert ist"
echo "   ‚Ä¢ Stelle sicher, dass der Backend-Server l√§uft"
echo ""

# Script ausf√ºhren
python3 "$SCRIPT_PATH"

echo ""
echo "‚úÖ Device-Client beendet."
echo ""
echo "üìñ Mehr Informationen:"
echo "   ‚Ä¢ Siehe device-client.py f√ºr Konfiguration"
echo "   ‚Ä¢ Device-Name und Secret in der Python-Datei anpassen"

